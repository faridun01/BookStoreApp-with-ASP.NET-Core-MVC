@model BookStoreApp.ViewModels.PaginatedBooksViewModel
@{
    ViewData["Title"] = "Books";
}

<h1 class="text-center">Books List</h1>

<div class="form-group mt-3 text-center mb-3">
    <a asp-action="Create" class="btn btn-outline-primary">Add a New Book</a>
</div>

<!-- Search Form -->
<form class="mb-3" method="get" asp-action="Index">
    <div class="input-group">
        <input id="search-box" type="text" name="query" value="@ViewData["SearchQuery"]"
               class="form-control" placeholder="Search books by title..."
               oninput="handleSearchClear(this)" />
        <button type="submit" class="btn btn-outline-primary">Search</button>
    </div>
</form>

<div class="row">
    @foreach (var book in Model.Books)
    {
        <div class="col-md-3 mb-3">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">@book.Title</h5>
                    <p class="card-text"><strong>Author:</strong> @book.Author</p>
                    <p class="card-text"><strong>Description:</strong> @book.Description</p>
                    <p class="card-text"><strong>Upload Date:</strong> @book.UploadDate.ToString("yyyy-MM-dd")</p>
                    <div class="d-flex flex-wrap gap-2">
                        <a asp-action="Edit" asp-route-id="@book.BookId" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@book.BookId" class="btn btn-info btn-sm">Details</a>
                        <a asp-action="Delete" asp-route-id="@book.BookId" class="btn btn-danger btn-sm">Delete</a>
                        <a asp-action="Download" asp-route-id="@book.BookId" class="btn btn-success btn-sm">Download</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    function handleSearchClear(input) {
        const query = input.value.trim();

        // Check if the input is empty
        if (query === "") {
            // Redirect to the Index page without removing the search query from the URL
            const url = new URL(window.location.href);
            url.searchParams.delete('query'); // Remove the 'query' parameter from the URL
            window.location.href = url.href; // Redirect to the updated URL
        }
    }
</script>


<!-- Pagination -->
<nav>
    <ul class="pagination justify-content-center">
        @if (Model.Books.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.Books.PageIndex - 1)" asp-route-query="@Model.SearchQuery">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.Books.TotalPages; i++)
        {
            <li class="page-item @(i == Model.Books.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-query="@Model.SearchQuery">@i</a>
            </li>
        }

        @if (Model.Books.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.Books.PageIndex + 1)" asp-route-query="@Model.SearchQuery">Next</a>
            </li>
        }
    </ul>
</nav>
