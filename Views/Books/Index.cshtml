@model BookStoreApp.ViewModels.PaginatedBooksViewModel

@{
    ViewData["Title"] = "Books";
}

<div class="container my-5">
    <div class="text-center mb-4">
        <h1 class="fw-bold text-primary"><i class="fas fa-book-open me-2"></i>Books Collection</h1>
        <a asp-action="Create" class="btn btn-outline-success mt-3 shadow-sm">
            <i class="fas fa-plus me-1"></i> Add New Book
        </a>
    </div>

    <!-- Search Bar -->
    <form class="mb-4" method="get" asp-action="Index">
        <div class="input-group input-group-lg shadow-sm">
            <input id="search-box" type="text" name="query" value="@ViewData["SearchQuery"]"
                   class="form-control rounded-start-pill" placeholder="Search books by title..."
                   oninput="handleSearchClear(this)" />
            <button type="submit" class="btn btn-outline-primary rounded-end-pill">
                <i class="fas fa-search"></i>
            </button>
        </div>
    </form>

    <!-- Book Cards -->
    <div class="row g-4">
        @foreach (var book in Model.Books)
        {
            <div class="col-md-6 col-lg-4 col-xl-3">
                <div class="card h-100 book-card border-0 shadow rounded-4 position-relative overflow-hidden">
                    <div class="card-body d-flex flex-column p-4">
                        <h5 class="card-title text-primary fw-bold mb-2">@book.Title</h5>

                        <span class="badge bg-light text-dark rounded-pill px-3 py-1 mb-2 w-fit">
                            <i class="fas fa-user-edit me-1 text-muted"></i> @book.Author
                        </span>

                        <p class="card-text text-muted small flex-grow-1">
                            <strong>Description:</strong> <br />
                            <span class="d-inline-block text-truncate" style="max-width: 100%;">@book.Description</span>
                        </p>

                        <p class="card-text small text-muted mb-3">
                            <i class="fas fa-calendar-alt me-1 text-secondary"></i>
                            Uploaded: @book.UploadDate.ToString("yyyy-MM-dd")
                        </p>

                        <div class="d-flex flex-wrap gap-2 mt-auto pt-3 border-top">
                            <a asp-action="Details" asp-route-id="@book.BookId" class="btn btn-sm btn-outline-info">
                                <i class="fas fa-info-circle me-1"></i> Details
                            </a>

                            <a asp-action="Edit" asp-route-id="@book.BookId" class="btn btn-sm btn-outline-warning text-dark">
                                <i class="fas fa-edit me-1"></i> Edit
                            </a>

                            <a asp-action="Delete" asp-route-id="@book.BookId" class="btn btn-sm btn-outline-danger">
                                <i class="fas fa-trash-alt me-1"></i> Delete
                            </a>
                            
                            <a asp-action="Download" asp-route-id="@book.BookId" class="btn btn-sm btn-outline-success">
                                <i class="fas fa-download me-1"></i> Download
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>


    <!-- Pagination -->
    <nav class="mt-5">
        <ul class="pagination justify-content-center">
            @if (Model.Books.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.Books.PageIndex - 1)" asp-route-query="@Model.SearchQuery">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.Books.TotalPages; i++)
            {
                <li class="page-item @(i == Model.Books.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-query="@Model.SearchQuery">@i</a>
                </li>
            }

            @if (Model.Books.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.Books.PageIndex + 1)" asp-route-query="@Model.SearchQuery">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>

<script>
    function handleSearchClear(input) {
        const query = input.value.trim();
        if (query === "") {
            const url = new URL(window.location.href);
            url.searchParams.delete('query');
            window.location.href = url.href;
        }
    }
</script>
